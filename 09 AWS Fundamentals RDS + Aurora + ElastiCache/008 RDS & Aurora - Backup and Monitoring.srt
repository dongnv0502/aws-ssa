1
00:00:00,120 --> 00:00:02,340
So now let's talk about RDS Backup.

2
00:00:02,340 --> 00:00:04,680
So first of all, you have automated backups

3
00:00:04,680 --> 00:00:07,140
and what it means that this service, RDS service,

4
00:00:07,140 --> 00:00:10,890
will automatically do a daily full backup of the database

5
00:00:10,890 --> 00:00:13,440
during your database backup window.

6
00:00:13,440 --> 00:00:15,840
But on top of it, every five minutes

7
00:00:15,840 --> 00:00:19,320
there's going to be the transactions log being backed-up.

8
00:00:19,320 --> 00:00:22,350
That means that the earliest backup you have

9
00:00:22,350 --> 00:00:24,750
is five minutes before now.

10
00:00:24,750 --> 00:00:27,390
That means that from these automated backups

11
00:00:27,390 --> 00:00:29,580
you can restore to any point of time

12
00:00:29,580 --> 00:00:31,500
up until five minutes ago.

13
00:00:31,500 --> 00:00:33,720
And for the automated backup retention,

14
00:00:33,720 --> 00:00:37,290
you can say between one to 35 days of retention.

15
00:00:37,290 --> 00:00:38,970
And if you wanted to disable this feature

16
00:00:38,970 --> 00:00:43,050
you would set zero to disable automated backups.

17
00:00:43,050 --> 00:00:46,770
The second option is to do manual DB Snapshots,

18
00:00:46,770 --> 00:00:48,630
manual database snapshots.

19
00:00:48,630 --> 00:00:50,640
And these, as the name indicates,

20
00:00:50,640 --> 00:00:53,340
are manually triggered by the user.

21
00:00:53,340 --> 00:00:55,170
But the benefit of it

22
00:00:55,170 --> 00:00:58,470
is that this backup, that you do manually,

23
00:00:58,470 --> 00:01:01,560
you can retain it for as long as you want.

24
00:01:01,560 --> 00:01:03,390
So automated backups expire,

25
00:01:03,390 --> 00:01:05,730
whereas DB Snapshots that are manual

26
00:01:05,730 --> 00:01:07,920
can be retained for as long as you want.

27
00:01:07,920 --> 00:01:08,790
So here is a trick.

28
00:01:08,790 --> 00:01:11,790
When would you use backups, obviously, to back up your data,

29
00:01:11,790 --> 00:01:15,180
but also if you want to save some costs.

30
00:01:15,180 --> 00:01:17,730
So say for example, you have an RDS database

31
00:01:17,730 --> 00:01:20,460
and you know that you're going to use it only

32
00:01:20,460 --> 00:01:22,170
two hours per month.

33
00:01:22,170 --> 00:01:25,200
Instead of stopping the database in which, for example,

34
00:01:25,200 --> 00:01:27,000
you will still have to pay for the storage

35
00:01:27,000 --> 00:01:29,580
even though your database is stopped.

36
00:01:29,580 --> 00:01:33,540
What you can do is that after using it for two hours

37
00:01:33,540 --> 00:01:38,400
you do a snapshot and then you delete the original database.

38
00:01:38,400 --> 00:01:41,190
The snapshot is costing you way less

39
00:01:41,190 --> 00:01:43,530
than the actual storage of the RDS database.

40
00:01:43,530 --> 00:01:46,320
And when you're ready to use again the database

41
00:01:46,320 --> 00:01:48,840
you would restore the snapshot and use that.

42
00:01:48,840 --> 00:01:51,540
So it's a little trick and it can come up in the exam.

43
00:01:52,710 --> 00:01:55,650
Now for Aurora backups, it is actually quite similar.

44
00:01:55,650 --> 00:01:59,550
You have automated backups from one to 35 days

45
00:01:59,550 --> 00:02:01,950
but they cannot be disabled.

46
00:02:01,950 --> 00:02:05,910
So on RDS, they could be disabled, but not on Aurora.

47
00:02:05,910 --> 00:02:08,669
And you have a point-in-time recovery

48
00:02:08,669 --> 00:02:10,830
at any point of time in that timeframe,

49
00:02:10,830 --> 00:02:13,470
so you can recover to whatever you want.

50
00:02:13,470 --> 00:02:15,540
Now for manual DB Snapshots,

51
00:02:15,540 --> 00:02:18,570
they can also be manually triggered by the user

52
00:02:18,570 --> 00:02:20,310
and you retain them for as long as you want.

53
00:02:20,310 --> 00:02:24,810
So you can see Aurora and RDS Backups are quite similar.

54
00:02:24,810 --> 00:02:27,630
Now what about the restore options?

55
00:02:27,630 --> 00:02:30,450
The first thing is that you can restore an RDS or

56
00:02:30,450 --> 00:02:33,510
Aurora backup or snapshots, they're the same thing,

57
00:02:33,510 --> 00:02:35,070
into a new database.

58
00:02:35,070 --> 00:02:37,860
So anytime you restore an automated backup

59
00:02:37,860 --> 00:02:42,450
or a manual snapshot, then it will create a new database.

60
00:02:42,450 --> 00:02:44,550
The other option is that you can restore

61
00:02:44,550 --> 00:02:47,877
a MySQL RDS database from S3.

62
00:02:47,877 --> 00:02:49,530
And S3, we haven't seen it yet,

63
00:02:49,530 --> 00:02:52,590
it's a way to store objects in the cloud on AWS,

64
00:02:52,590 --> 00:02:54,270
it's a very popular service,

65
00:02:54,270 --> 00:02:56,970
And the idea is that you will create a backup

66
00:02:56,970 --> 00:02:59,580
of your on-premises database,

67
00:02:59,580 --> 00:03:02,850
and then you will place it onto Amazon S3,

68
00:03:02,850 --> 00:03:04,920
which is some object storage.

69
00:03:04,920 --> 00:03:07,620
And finally, there is the option in RDS

70
00:03:07,620 --> 00:03:11,040
to restore the backup file from Amazon S3

71
00:03:11,040 --> 00:03:14,433
onto a new RDS instance running MySQL.

72
00:03:15,360 --> 00:03:16,620
And if you wanted to, instead,

73
00:03:16,620 --> 00:03:19,590
restore to MySQL Aurora cluster,

74
00:03:19,590 --> 00:03:21,900
what you can do is that you take a backup again

75
00:03:21,900 --> 00:03:25,230
of your on-premises database, so externally,

76
00:03:25,230 --> 00:03:26,520
and then you used to use a software

77
00:03:26,520 --> 00:03:28,410
called Percona XtraBackup.

78
00:03:28,410 --> 00:03:30,540
It only works with this for now.

79
00:03:30,540 --> 00:03:33,690
Then the backup file of Percona XtraBackup

80
00:03:33,690 --> 00:03:35,460
goes onto Amazon S3.

81
00:03:35,460 --> 00:03:37,680
And from this you can restore the backup file

82
00:03:37,680 --> 00:03:40,950
onto a new Aurora cluster running MySQL.

83
00:03:40,950 --> 00:03:44,910
So the difference here is that for restoring into RDS MySQL

84
00:03:44,910 --> 00:03:47,490
you just need a backup of your database

85
00:03:47,490 --> 00:03:51,030
for restoring into Aurora MySQL.

86
00:03:51,030 --> 00:03:52,680
What you need to do is to do a backup using

87
00:03:52,680 --> 00:03:55,650
Percona Xtrabackup, and then from S3

88
00:03:55,650 --> 00:03:59,010
into your Aurora DB cluster.

89
00:03:59,010 --> 00:04:00,510
Okay, so those are restore options

90
00:04:00,510 --> 00:04:03,420
for either the snapshots or the database dumps

91
00:04:03,420 --> 00:04:04,980
onto Amazon S3.

92
00:04:04,980 --> 00:04:07,260
And finally, there's a last feature you need to know about

93
00:04:07,260 --> 00:04:09,540
called Aurora Database Cloning.

94
00:04:09,540 --> 00:04:13,110
So this allows you to create a new Aurora database cluster

95
00:04:13,110 --> 00:04:14,820
from an existing one.

96
00:04:14,820 --> 00:04:18,029
So say you have a production database in Aurora

97
00:04:18,029 --> 00:04:21,149
and you want to actually run test on it

98
00:04:21,149 --> 00:04:22,440
but you want to copy the data

99
00:04:22,440 --> 00:04:23,970
because your test application must be

100
00:04:23,970 --> 00:04:25,530
in a staging environment.

101
00:04:25,530 --> 00:04:26,363
Well, for this

102
00:04:26,363 --> 00:04:28,590
you're just going to clone your production Aurora database.

103
00:04:28,590 --> 00:04:30,090
It's going to give you a new database,

104
00:04:30,090 --> 00:04:31,530
and you can call it, for example,

105
00:04:31,530 --> 00:04:33,330
the Staging Aurora database.

106
00:04:33,330 --> 00:04:35,070
And it's going to be very quick.

107
00:04:35,070 --> 00:04:38,640
It's faster than doing a snapshot and restore.

108
00:04:38,640 --> 00:04:43,440
So why, while cloning uses the copy-on-write protocol,

109
00:04:43,440 --> 00:04:44,490
how does that work?

110
00:04:44,490 --> 00:04:47,310
Well, initially, when you create a database clone

111
00:04:47,310 --> 00:04:50,070
it's going to be using the same data volume

112
00:04:50,070 --> 00:04:52,200
as the original database cluster,

113
00:04:52,200 --> 00:04:53,910
which is going to be fast and efficient

114
00:04:53,910 --> 00:04:57,120
because you don't have any copying of data.

115
00:04:57,120 --> 00:05:00,300
And then as the updates are being made

116
00:05:00,300 --> 00:05:02,490
to the production Aurora database,

117
00:05:02,490 --> 00:05:04,680
or to the Staging Aurora database,

118
00:05:04,680 --> 00:05:07,980
then new additional storage is going to be allocated

119
00:05:07,980 --> 00:05:11,520
and data is going to be copied and separated.

120
00:05:11,520 --> 00:05:13,560
So that means you have the best of both worlds.

121
00:05:13,560 --> 00:05:17,760
So doing a database cloning is very fast and cost effective,

122
00:05:17,760 --> 00:05:21,210
and it's extremely useful to have a staging database

123
00:05:21,210 --> 00:05:22,710
from a production database

124
00:05:22,710 --> 00:05:24,900
without impacting the production database

125
00:05:24,900 --> 00:05:28,380
and without going through snapshot and restore features.

126
00:05:28,380 --> 00:05:29,280
Okay, that's it.

127
00:05:29,280 --> 00:05:31,650
We've seen all the options for backup and restore

128
00:05:31,650 --> 00:05:32,880
as well as cloning.

129
00:05:32,880 --> 00:05:34,050
I hope you liked it.

130
00:05:34,050 --> 00:05:36,153
And I will see you in the next lecture.

