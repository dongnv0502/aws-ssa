1
00:00:00,180 --> 00:00:01,830
Okay, so I'm going to give you

2
00:00:01,830 --> 00:00:04,170
a quick introduction to CloudFormation

3
00:00:04,170 --> 00:00:06,060
and give you an overview that really allows you

4
00:00:06,060 --> 00:00:07,110
to understand how it works.

5
00:00:07,110 --> 00:00:09,120
So let's create a stack

6
00:00:09,120 --> 00:00:13,320
and let's make sure first of all that we are in the US East,

7
00:00:13,320 --> 00:00:15,840
Northern Virginia, US East 1 region,

8
00:00:15,840 --> 00:00:17,760
because the template I've created for you

9
00:00:17,760 --> 00:00:18,870
only works in that region.

10
00:00:18,870 --> 00:00:21,090
And I will tell you why when we see the template.

11
00:00:21,090 --> 00:00:24,660
So please make sure to switch the region to this one.

12
00:00:24,660 --> 00:00:28,110
Next we create a stack and we have to prepare templates.

13
00:00:28,110 --> 00:00:29,490
So multiple options.

14
00:00:29,490 --> 00:00:30,900
We can choose an existing one,

15
00:00:30,900 --> 00:00:34,320
use a sample template and some samples are provided

16
00:00:34,320 --> 00:00:36,060
or build from Application Composer.

17
00:00:36,060 --> 00:00:38,610
But we're going to choose an existing template.

18
00:00:38,610 --> 00:00:40,470
We're going to upload a template file

19
00:00:40,470 --> 00:00:42,090
and let me show you what the file looks like.

20
00:00:42,090 --> 00:00:44,640
So in your course code under CloudFormation,

21
00:00:44,640 --> 00:00:47,490
you have 0-just-EC2.yaml.

22
00:00:47,490 --> 00:00:49,470
And this is a very simple file right now

23
00:00:49,470 --> 00:00:52,260
which has a resource blog and it creates

24
00:00:52,260 --> 00:00:53,580
an instance called My instance.

25
00:00:53,580 --> 00:00:56,310
The type is EC2 instance,

26
00:00:56,310 --> 00:00:57,900
and then you have a few properties.

27
00:00:57,900 --> 00:00:59,790
The first one is the availability zone,

28
00:00:59,790 --> 00:01:01,470
which is US East 1a

29
00:01:01,470 --> 00:01:03,990
and this is why you have to choose US East 1

30
00:01:03,990 --> 00:01:06,450
as your region in CloudFormation service right now.

31
00:01:06,450 --> 00:01:09,330
And the image ID is this AMI ID.

32
00:01:09,330 --> 00:01:10,530
And as you should know,

33
00:01:10,530 --> 00:01:13,200
AMI IDs are scoped within the region.

34
00:01:13,200 --> 00:01:16,530
So for these two reasons, you must be in US East 1

35
00:01:16,530 --> 00:01:17,790
for this hands-on.

36
00:01:17,790 --> 00:01:19,740
The instance type is T2 micro.

37
00:01:19,740 --> 00:01:22,020
And so as you can see we define how to launch

38
00:01:22,020 --> 00:01:25,200
an EC2 instance through this YAML file.

39
00:01:25,200 --> 00:01:27,900
So let's go ahead and actually upload this file.

40
00:01:27,900 --> 00:01:32,340
So select it and then you can actually view it

41
00:01:32,340 --> 00:01:34,500
in Application Composer.

42
00:01:34,500 --> 00:01:36,060
So open this in a new tab.

43
00:01:36,060 --> 00:01:39,030
So here is my template.

44
00:01:39,030 --> 00:01:41,400
So as you can see, Application Composer gives us

45
00:01:41,400 --> 00:01:44,220
a visual understanding of our templates.

46
00:01:44,220 --> 00:01:45,870
So if we look within templates,

47
00:01:45,870 --> 00:01:48,450
we get back the code that we just uploaded right here

48
00:01:48,450 --> 00:01:51,480
and we can switch it to YAML and JSON if we wanted to.

49
00:01:51,480 --> 00:01:53,400
But in the canvas we see that we have

50
00:01:53,400 --> 00:01:54,840
one standard component,

51
00:01:54,840 --> 00:01:57,270
which is an EC2 instance in my instance.

52
00:01:57,270 --> 00:01:58,800
You could double click on it

53
00:01:58,800 --> 00:02:01,650
and view it the fact that it's an EC2 instance as well.

54
00:02:01,650 --> 00:02:03,510
So Application Composer is a nice way

55
00:02:03,510 --> 00:02:06,420
of getting a visual feedback of your templates.

56
00:02:06,420 --> 00:02:07,950
Anyway, back into our stack.

57
00:02:07,950 --> 00:02:09,630
Let's click on next.

58
00:02:09,630 --> 00:02:12,330
We have to provide a demo stack name.

59
00:02:12,330 --> 00:02:15,700
So I'll call this one demo CloudFormation

60
00:02:17,190 --> 00:02:18,240
and then some parameters.

61
00:02:18,240 --> 00:02:19,830
But because we don't define any parameters

62
00:02:19,830 --> 00:02:22,650
in our templates so far, we don't do anything here.

63
00:02:22,650 --> 00:02:24,570
Let's click on next here we have tags.

64
00:02:24,570 --> 00:02:28,380
So I'm just going to show you tag being CFDemo

65
00:02:28,380 --> 00:02:32,130
just to show you how tags work in CloudFormation.

66
00:02:32,130 --> 00:02:34,350
We scroll down, no permissions to set.

67
00:02:34,350 --> 00:02:37,320
We don't touch these options and neither of these options.

68
00:02:37,320 --> 00:02:40,770
So let's click on next and we review and create.

69
00:02:40,770 --> 00:02:43,413
And when we're good to go, let's click on submit.

70
00:02:44,970 --> 00:02:48,150
So as you can see now this template I uploaded

71
00:02:48,150 --> 00:02:50,940
is going to generate some events and that was very quick.

72
00:02:50,940 --> 00:02:52,110
So the events are done

73
00:02:52,110 --> 00:02:55,380
and this actually created a resource right here,

74
00:02:55,380 --> 00:02:56,550
which is an EC2 instance.

75
00:02:56,550 --> 00:02:59,610
So the code got a resource out of it,

76
00:02:59,610 --> 00:03:02,160
and this is why it's called Infrastructure as Code.

77
00:03:03,540 --> 00:03:05,190
So you can click on this EC2 instance.

78
00:03:05,190 --> 00:03:07,860
As you can see right now in the EC2 console,

79
00:03:07,860 --> 00:03:09,780
my instance is running

80
00:03:09,780 --> 00:03:13,290
and you can check the fact that indeed it is a T2 micro

81
00:03:13,290 --> 00:03:14,790
type of instance.

82
00:03:14,790 --> 00:03:16,050
And you can also check the fact

83
00:03:16,050 --> 00:03:19,140
that the AMI ID we have selected is the one

84
00:03:19,140 --> 00:03:21,660
that was entered in our template.

85
00:03:21,660 --> 00:03:23,370
So this is all very convenient.

86
00:03:23,370 --> 00:03:26,640
On top of it, we notice that if you go to our EC2 instance

87
00:03:26,640 --> 00:03:28,500
and we look at the tags,

88
00:03:28,500 --> 00:03:31,710
we can see that some tags were applied by CloudFormation,

89
00:03:31,710 --> 00:03:34,200
which are the name of the CloudFormation,

90
00:03:34,200 --> 00:03:36,510
the name of the logical ID and the stack ID,

91
00:03:36,510 --> 00:03:38,100
but also the name we have specified.

92
00:03:38,100 --> 00:03:40,300
So the tag we specified has name CFDemo

93
00:03:41,340 --> 00:03:43,170
has also been applied to this EC2 instance,

94
00:03:43,170 --> 00:03:45,480
and therefore it's named correctly.

95
00:03:45,480 --> 00:03:47,220
Okay, so now that we have an instance,

96
00:03:47,220 --> 00:03:48,990
let's go ahead and update this stack.

97
00:03:48,990 --> 00:03:50,730
So we click on update

98
00:03:50,730 --> 00:03:53,040
and we replace the existing template.

99
00:03:53,040 --> 00:03:54,450
And this time we're going to choose this

100
00:03:54,450 --> 00:03:57,660
1-ec2-with-sg-eip file.

101
00:03:57,660 --> 00:04:00,240
And if you have a look at it, this file is right here.

102
00:04:00,240 --> 00:04:02,490
So we have a more complete file now.

103
00:04:02,490 --> 00:04:04,200
We have a parameter section

104
00:04:04,200 --> 00:04:06,990
to set the security group description.

105
00:04:06,990 --> 00:04:08,970
We have the EC2 instance section,

106
00:04:08,970 --> 00:04:09,960
which is a bit more complete

107
00:04:09,960 --> 00:04:13,860
because now it has security groups and it has two of those.

108
00:04:13,860 --> 00:04:18,480
We have an Elastic IP here that is attached to my instance.

109
00:04:18,480 --> 00:04:22,200
And we have one security group here defined for SSH rules.

110
00:04:22,200 --> 00:04:24,190
So port 22 is going to be open

111
00:04:25,590 --> 00:04:28,230
and we have the server security group,

112
00:04:28,230 --> 00:04:31,620
which is going to be open on port 80 from everyone

113
00:04:31,620 --> 00:04:34,950
and port 22 from a very specific IP.

114
00:04:34,950 --> 00:04:37,740
So this is a more complete CloudFormation template.

115
00:04:37,740 --> 00:04:39,540
Now let's go back to CloudFormation

116
00:04:39,540 --> 00:04:41,820
and we're going to apply these template.

117
00:04:41,820 --> 00:04:44,130
So here we are prompted with a parameter.

118
00:04:44,130 --> 00:04:46,650
So what is the security group description?

119
00:04:46,650 --> 00:04:49,260
So let's enter demo description.

120
00:04:49,260 --> 00:04:51,840
And as you can see now we are entering some texts,

121
00:04:51,840 --> 00:04:53,700
which is going to make everything vary.

122
00:04:53,700 --> 00:04:55,440
We don't touch the tags, we don't touch anything.

123
00:04:55,440 --> 00:04:56,790
Let's click on next.

124
00:04:56,790 --> 00:04:58,950
And now because we are applying an update,

125
00:04:58,950 --> 00:05:01,792
as you can see, we have a change set.

126
00:05:01,792 --> 00:05:03,150
And so we can preview the change sets,

127
00:05:03,150 --> 00:05:05,280
which is what is going to change

128
00:05:05,280 --> 00:05:07,080
in our CloudFormation stack.

129
00:05:07,080 --> 00:05:09,150
So as you can see, a few things are added.

130
00:05:09,150 --> 00:05:12,210
There is an Elastic IP, there is an SSH security group

131
00:05:12,210 --> 00:05:13,440
and a server security group.

132
00:05:13,440 --> 00:05:15,360
And it's add, so it's new.

133
00:05:15,360 --> 00:05:16,980
And my instance is going to change,

134
00:05:16,980 --> 00:05:20,850
it's going to be modified, and there is a column here

135
00:05:20,850 --> 00:05:22,080
says replacement true.

136
00:05:22,080 --> 00:05:24,630
That means that this EC2 instance is going to be replaced,

137
00:05:24,630 --> 00:05:27,150
that means that the previous one is going to be deleted

138
00:05:27,150 --> 00:05:28,860
and a new one is going to be created.

139
00:05:28,860 --> 00:05:31,260
So it's good to know in case you had some data

140
00:05:31,260 --> 00:05:33,450
on your EC2 instance.

141
00:05:33,450 --> 00:05:37,050
So now let's submit this update and see what happens.

142
00:05:37,050 --> 00:05:39,420
So CloudFormation is a very smart service

143
00:05:39,420 --> 00:05:43,080
because well, from just this code right here

144
00:05:43,080 --> 00:05:45,210
it's able to figure out exactly what to do

145
00:05:45,210 --> 00:05:46,590
thanks to the change sets,

146
00:05:46,590 --> 00:05:48,990
so it knows exactly what to create first.

147
00:05:48,990 --> 00:05:51,600
So as you can see, the server security group

148
00:05:51,600 --> 00:05:54,240
and the SSH security group already are created.

149
00:05:54,240 --> 00:05:57,720
And only then will it update the EC2 instance.

150
00:05:57,720 --> 00:06:01,320
So now the my instance is an update in progress,

151
00:06:01,320 --> 00:06:03,600
and as you can see, it says requested updates requires

152
00:06:03,600 --> 00:06:06,960
the creation of a new physical resource, hence creating one.

153
00:06:06,960 --> 00:06:08,370
So if you go into the EC2 console

154
00:06:08,370 --> 00:06:10,560
and we remove this filter,

155
00:06:10,560 --> 00:06:13,200
now we see that we have two EC2 instances.

156
00:06:13,200 --> 00:06:16,020
This one was created before and this one is the new one

157
00:06:16,020 --> 00:06:18,360
and it was pending and now it is running.

158
00:06:18,360 --> 00:06:21,000
So a new instance got created

159
00:06:21,000 --> 00:06:23,940
and once it's created, again, it's going to be updated here,

160
00:06:23,940 --> 00:06:25,290
the update is complete.

161
00:06:25,290 --> 00:06:27,000
And now we have MyEIP.

162
00:06:27,000 --> 00:06:29,910
So now the Elastic IP is going to be created

163
00:06:29,910 --> 00:06:31,890
and then attached to my EC2 instance.

164
00:06:31,890 --> 00:06:34,530
So if we're quick and we go on the left hand side

165
00:06:34,530 --> 00:06:37,890
to Elastic IP, even though we may not have seen what it is

166
00:06:37,890 --> 00:06:41,580
here is Elastic IP that is properly created,

167
00:06:41,580 --> 00:06:44,632
properly tagged, and it is attached already

168
00:06:44,632 --> 00:06:46,050
to our EC2 instance.

169
00:06:46,050 --> 00:06:48,420
So now if I click on this one

170
00:06:48,420 --> 00:06:51,960
and then I click on networking at the bottom,

171
00:06:51,960 --> 00:06:54,690
you see Elastic IP address here was attached.

172
00:06:54,690 --> 00:06:58,860
So everything was done by CloudFormation and was done well.

173
00:06:58,860 --> 00:07:01,350
And if you look at CloudFormation now in the events,

174
00:07:01,350 --> 00:07:03,840
as you can see, the Elastic IP was created

175
00:07:03,840 --> 00:07:07,290
and then there was a cleanup in progress due in progress.

176
00:07:07,290 --> 00:07:09,630
So that means that the previous EC2 instance right here,

177
00:07:09,630 --> 00:07:11,970
this one got terminated,

178
00:07:11,970 --> 00:07:13,380
which is very handy because CloudFormation

179
00:07:13,380 --> 00:07:15,120
takes care of everything.

180
00:07:15,120 --> 00:07:16,920
So you can go into the resources tab

181
00:07:16,920 --> 00:07:21,120
and see everything that was created through CloudFormation.

182
00:07:21,120 --> 00:07:22,860
On top of it, if you go to the template

183
00:07:22,860 --> 00:07:25,620
and you click on view in Application Composer,

184
00:07:25,620 --> 00:07:28,200
you're able to see now your new architecture.

185
00:07:28,200 --> 00:07:31,470
So we have an EC2 instance connected to an Elastic IP

186
00:07:31,470 --> 00:07:33,720
and connected to two security groups.

187
00:07:33,720 --> 00:07:34,740
So this is very handy

188
00:07:34,740 --> 00:07:36,480
because it gets a visual representation

189
00:07:36,480 --> 00:07:39,210
again of our templates.

190
00:07:39,210 --> 00:07:41,340
So finally, of course, confirmation.

191
00:07:41,340 --> 00:07:43,230
You could go ahead and delete things manually.

192
00:07:43,230 --> 00:07:45,450
You could delete this Elastic IP and so on,

193
00:07:45,450 --> 00:07:47,460
and the EC2 instances manually.

194
00:07:47,460 --> 00:07:48,810
But this is actually not recommended.

195
00:07:48,810 --> 00:07:51,000
You don't wanna touch anything manually

196
00:07:51,000 --> 00:07:52,290
when using CloudFormation.

197
00:07:52,290 --> 00:07:54,750
Instead, you want to either update the templates,

198
00:07:54,750 --> 00:07:57,780
or if you wanted to delete everything, just click on delete.

199
00:07:57,780 --> 00:08:00,960
And CloudFormation will delete all the stack resources.

200
00:08:00,960 --> 00:08:03,960
And the stack resources are also going to be deleted

201
00:08:03,960 --> 00:08:04,793
in the right orders.

202
00:08:04,793 --> 00:08:07,260
So CloudFormation will figure out what to delete first

203
00:08:07,260 --> 00:08:09,840
and so on to clean up everything.

204
00:08:09,840 --> 00:08:12,720
So CloudFormation is a really powerful service

205
00:08:12,720 --> 00:08:15,450
to do infrastructure as code because it's declarative.

206
00:08:15,450 --> 00:08:17,007
You just say what you want and CloudFormation

207
00:08:17,007 --> 00:08:20,070
figures it out, and all the code will control

208
00:08:20,070 --> 00:08:22,950
your infrastructure, which is very, very handy.

209
00:08:22,950 --> 00:08:24,690
So learning how to use it

210
00:08:24,690 --> 00:08:27,543
and write it can be a very good skill in AWS.

211
00:08:28,380 --> 00:08:29,640
So I hope you liked it

212
00:08:29,640 --> 00:08:31,773
and I will see you in the next lecture.

