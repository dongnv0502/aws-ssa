1
00:00:00,000 --> 00:00:01,890
Bây giờ hãy nói về Amazon EMR.

2
00:00:01,890 --> 00:00:04,800
EMR là viết tắt của Elastic MapReduce

3
00:00:04,800 --> 00:00:08,640
và giúp bạn tạo các cụm Hadoop

4
00:00:08,640 --> 00:00:11,250
để xử lý big data trên AWS.

5
00:00:11,250 --> 00:00:12,840
Điều này cho phép bạn phân tích

6
00:00:12,840 --> 00:00:15,157
và xử lý lượng dữ liệu khổng lồ.

7
00:00:15,157 --> 00:00:17,310
Bất cứ khi nào bạn thấy điều gì liên quan

8
00:00:17,310 --> 00:00:20,730
đến các cụm big data với Hadoop,

9
00:00:20,730 --> 00:00:22,466
hãy nghĩ đến Amazon EMR.

10
00:00:22,466 --> 00:00:24,750
Các cụm này cần được cấp phát

11
00:00:24,750 --> 00:00:28,380
và có thể gồm hàng trăm instance EC2.

12
00:00:28,380 --> 00:00:30,030
Tại sao dùng EMR?

13
00:00:30,030 --> 00:00:32,400
EMR đi kèm nhiều công cụ

14
00:00:32,400 --> 00:00:34,410
mà chuyên gia big data sử dụng.

15
00:00:34,410 --> 00:00:36,690
Ví dụ Apache Spark, HBase,

16
00:00:36,690 --> 00:00:39,125
Presto hay Apache Flink.

17
00:00:39,125 --> 00:00:41,160
Chúng rất khó thiết lập,

18
00:00:41,160 --> 00:00:44,340
vì vậy Amazon EMR lo việc cấp phát

19
00:00:44,340 --> 00:00:47,190
và cấu hình các dịch vụ đó cho bạn.

20
00:00:47,190 --> 00:00:50,040
Bạn cũng có thể auto-scale toàn bộ cụm

21
00:00:50,040 --> 00:00:52,290
và tích hợp spot instance

22
00:00:52,290 --> 00:00:54,750
để hưởng lợi giảm giá.

23
00:00:54,750 --> 00:00:56,610
Các trường hợp dùng Amazon EMR

24
00:00:56,610 --> 00:00:58,740
trong kỳ thi xoay quanh xử lý dữ liệu,

25
00:00:58,740 --> 00:01:00,180
machine learning, web indexing và big data

26
00:01:00,180 --> 00:01:02,340
nhưng tất cả đều dùng công nghệ big data

27
00:01:02,340 --> 00:01:05,850
như Hadoop, Spark, HBase, Presto, Flink...

28
00:01:05,850 --> 00:01:10,077
Amazon EMR gồm các cụm instance EC2

29
00:01:10,077 --> 00:01:13,950
với các loại node khác nhau.

30
00:01:13,950 --> 00:01:15,390
Có Master Node

31
00:01:15,390 --> 00:01:16,650
quản lý cụm,

32
00:01:16,650 --> 00:01:18,720
điều phối và giám sát tình trạng

33
00:01:18,720 --> 00:01:20,700
các node khác, và phải chạy liên tục.

34
00:01:20,700 --> 00:01:24,960
Tiếp theo là Core Node, chạy tác vụ

35
00:01:24,960 --> 00:01:28,440
và lưu dữ liệu, cũng phải chạy liên tục.

36
00:01:28,440 --> 00:01:32,070
Sau đó là Task Node

37
00:01:32,070 --> 00:01:33,780
chỉ dùng để chạy tác vụ.

38
00:01:33,780 --> 00:01:36,000
Thường bạn có thể dùng spot instance cho nó

39
00:01:36,000 --> 00:01:38,400
và task node là tùy chọn.

40
00:01:38,400 --> 00:01:41,197
Tùy chọn mua phụ thuộc vào nhu cầu.

41
00:01:41,197 --> 00:01:43,830
Nếu dùng EC2 on-demand

42
00:01:43,830 --> 00:01:46,650
bạn có workload ổn định

43
00:01:46,650 --> 00:01:48,060
và không bị chấm dứt.

44
00:01:48,060 --> 00:01:49,800
Nếu dùng reserved instance

45
00:01:49,800 --> 00:01:51,870
(tối thiểu một năm),

46
00:01:51,870 --> 00:01:53,550
bạn sẽ tiết kiệm chi phí lớn

47
00:01:53,550 --> 00:01:56,190
và EMR sẽ tự dùng RI nếu có.

48
00:01:56,190 --> 00:01:58,770
Vì vậy Master Node

49
00:01:58,770 --> 00:02:00,000
và Core Node là ứng viên tốt cho RI.

50
00:02:00,000 --> 00:02:03,030
Đối với spot instance, vì có thể bị thu hồi

51
00:02:03,030 --> 00:02:06,420
nên ít tin cậy hơn nhưng rẻ.

52
00:02:06,420 --> 00:02:08,370
Cách tốt để dùng spot instance

53
00:02:08,370 --> 00:02:13,050
là áp dụng cho Task Node.

54
00:02:13,050 --> 00:02:16,920
Cuối cùng, về triển khai EMR,

55
00:02:16,920 --> 00:02:20,258
bạn có thể dùng cụm chạy lâu dài

56
00:02:20,258 --> 00:02:23,790
phù hợp với reserved instance,

57
00:02:23,790 --> 00:02:25,773
hoặc cụm tạm thời

58
00:02:26,820 --> 00:02:28,680
chạy xong rồi xoá

59
00:02:28,680 --> 00:02:30,780
khi phân tích hoàn tất.

60
00:02:30,780 --> 00:02:34,290
Được rồi, bạn đã biết những gì cần thiết

61
00:02:34,290 --> 00:02:36,840
cho Amazon EMR trong kỳ thi.

62
00:02:36,840 --> 00:02:39,060
Hy vọng bạn thích,

63
00:02:39,060 --> 00:02:40,768
và hẹn gặp ở bài tiếp theo.

