1
00:00:00,210 --> 00:00:02,400
Okay, so now let's view an advanced use case

2
00:00:02,400 --> 00:00:05,760
that comes up a lot in the exam, which is around Hybrid DNS.

3
00:00:05,760 --> 00:00:09,540
So we have our region and there is the Route 53 resolver.

4
00:00:09,540 --> 00:00:11,460
And by default, this resolver is going

5
00:00:11,460 --> 00:00:13,350
to automatically answer DNS queries

6
00:00:13,350 --> 00:00:15,570
for local domain names for EC2 instances.

7
00:00:15,570 --> 00:00:17,490
So for example, here's our VPC.

8
00:00:17,490 --> 00:00:18,930
We have an EC2 instance.

9
00:00:18,930 --> 00:00:20,400
There is this DNS name,

10
00:00:20,400 --> 00:00:23,370
the Route 53 resolver knows how to reply to these queries.

11
00:00:23,370 --> 00:00:24,480
So this is fine.

12
00:00:24,480 --> 00:00:26,430
Any records in your private hosted zone as well

13
00:00:26,430 --> 00:00:28,140
is going to be easy to answer to,

14
00:00:28,140 --> 00:00:29,940
and records in public name servers,

15
00:00:29,940 --> 00:00:31,590
for example, for a public hosted zone,

16
00:00:31,590 --> 00:00:35,070
or any name server out there that is public on the internet.

17
00:00:35,070 --> 00:00:37,170
Now, if you want to resolve DNS queries

18
00:00:37,170 --> 00:00:40,740
between your VPC and other private networks,

19
00:00:40,740 --> 00:00:43,380
your own networks that has other DNS resolvers,

20
00:00:43,380 --> 00:00:46,080
then you're going to need a hybrid DNS.

21
00:00:46,080 --> 00:00:49,230
So these networks can be PeeredVPC for example,

22
00:00:49,230 --> 00:00:51,690
or it could be an on-premises network that is going

23
00:00:51,690 --> 00:00:54,030
to be connected to our VPC

24
00:00:54,030 --> 00:00:57,270
through Direct Connect or AWS VPN.

25
00:00:57,270 --> 00:00:59,430
So for this, let me introduce you two concepts

26
00:00:59,430 --> 00:01:02,580
that we're going to see with diagrams in the next slides.

27
00:01:02,580 --> 00:01:05,280
So these are about resolver endpoints.

28
00:01:05,280 --> 00:01:06,330
So there is two things.

29
00:01:06,330 --> 00:01:08,580
There's an inbound endpoint and an outbound endpoint.

30
00:01:08,580 --> 00:01:11,730
So inbound endpoints are allowing DNS resolvers

31
00:01:11,730 --> 00:01:15,540
on your external networks to forward DNS queries

32
00:01:15,540 --> 00:01:19,680
to your Route 53 resolver and answer these queries.

33
00:01:19,680 --> 00:01:22,890
So these resolvers will help to resolve domain names

34
00:01:22,890 --> 00:01:24,630
for the resources of AWS.

35
00:01:24,630 --> 00:01:26,940
For example, your EC2 instances or records

36
00:01:26,940 --> 00:01:29,460
that you create in your Route 53 private hosted zone.

37
00:01:29,460 --> 00:01:33,480
So you get both answers for your internal systems,

38
00:01:33,480 --> 00:01:35,730
and also for AWS private host zones,

39
00:01:35,730 --> 00:01:36,870
and I will show you a diagram,

40
00:01:36,870 --> 00:01:39,030
it will make a lot more sense very, very soon.

41
00:01:39,030 --> 00:01:40,830
Now, your outbound endpoint is

42
00:01:40,830 --> 00:01:43,800
to conditionally forward DNS queries

43
00:01:43,800 --> 00:01:46,770
to your on-premises DNS resolvers.

44
00:01:46,770 --> 00:01:48,840
And for this, we're going to create resolver rules

45
00:01:48,840 --> 00:01:50,100
to forward them.

46
00:01:50,100 --> 00:01:52,770
Now we associate these endpoints with one or more VPCs

47
00:01:52,770 --> 00:01:54,030
within the same region,

48
00:01:54,030 --> 00:01:55,860
and we create in two availability zones

49
00:01:55,860 --> 00:01:57,180
for high availability.

50
00:01:57,180 --> 00:01:58,800
Now each endpoint supports

51
00:01:58,800 --> 00:02:00,990
about 10,000 queries per second, per IP address.

52
00:02:00,990 --> 00:02:03,990
And if you need more, well, you create more IP addresses.

53
00:02:03,990 --> 00:02:07,020
And these resolvers remove the need from before

54
00:02:07,020 --> 00:02:10,110
where people have to run their own DNS resolvers

55
00:02:10,110 --> 00:02:13,380
on AWS and link them to their resolvers on premises.

56
00:02:13,380 --> 00:02:16,920
Now, these are managed resolver endpoints by AWS.

57
00:02:16,920 --> 00:02:17,940
So let's have a look at a diagram,

58
00:02:17,940 --> 00:02:19,440
it will make a lot more sense.

59
00:02:19,440 --> 00:02:23,070
So let's take an example where we have an EC2 instance,

60
00:02:23,070 --> 00:02:24,326
and lives in a VPC,

61
00:02:24,326 --> 00:02:26,520
and we have a private hosted zone that we create,

62
00:02:26,520 --> 00:02:28,860
for example, aws.private,

63
00:02:28,860 --> 00:02:31,650
and we have also an on-premises data center

64
00:02:31,650 --> 00:02:33,180
that has a server.

65
00:02:33,180 --> 00:02:35,280
Now, if you look at the EC2 instance,

66
00:02:35,280 --> 00:02:39,713
I gave it a CNAME of app.aws.private, okay?

67
00:02:39,713 --> 00:02:44,250
This is a CNAME, which is linked maybe to its EC2 DNS,

68
00:02:44,250 --> 00:02:47,100
or it could be an A record linked to its private IP.

69
00:02:47,100 --> 00:02:48,300
It doesn't matter right?

70
00:02:48,300 --> 00:02:50,310
Now what's happening is that the server

71
00:02:50,310 --> 00:02:55,140
at web.onpremises.private wants to access this EC2 instance.

72
00:02:55,140 --> 00:02:59,520
And so first, the on-premises data center and the AWS cloud

73
00:02:59,520 --> 00:03:01,650
are going to be linked using a VPN connection,

74
00:03:01,650 --> 00:03:02,483
or Direct Connect.

75
00:03:02,483 --> 00:03:03,330
Okay?

76
00:03:03,330 --> 00:03:05,640
Now we're going to have on-premises as well

77
00:03:05,640 --> 00:03:06,990
as some DNS resolvers,

78
00:03:06,990 --> 00:03:10,080
for obviously the zone of our on-premises data center.

79
00:03:10,080 --> 00:03:13,830
So they're going to be for the zone onpremise.private.

80
00:03:13,830 --> 00:03:16,620
Now, when the server will issue a DNS query

81
00:03:16,620 --> 00:03:18,893
for app.aws.private

82
00:03:18,893 --> 00:03:21,570
the DNS resolvers are going to say, hey, you know what?

83
00:03:21,570 --> 00:03:22,830
I don't know these,

84
00:03:22,830 --> 00:03:24,300
but what we're going to happen is that we're going

85
00:03:24,300 --> 00:03:26,250
to create a resolver inbound endpoint,

86
00:03:26,250 --> 00:03:29,310
and behind the scenes this resolver inbound endpoint

87
00:03:29,310 --> 00:03:32,370
has two ENIs, again for high availability.

88
00:03:32,370 --> 00:03:35,880
Now these ENIs are associated with private IP addresses.

89
00:03:35,880 --> 00:03:36,930
So what's going to happen is that

90
00:03:36,930 --> 00:03:39,810
within our DNS resolvers on premises,

91
00:03:39,810 --> 00:03:43,320
we're going to say that for the domain name, aws.private,

92
00:03:43,320 --> 00:03:46,050
we're going to forward to these two IPs.

93
00:03:46,050 --> 00:03:46,883
Okay?

94
00:03:46,883 --> 00:03:49,200
And what's going to happen is that now the DNS query

95
00:03:49,200 --> 00:03:53,070
for app.aws.private matches this domain name

96
00:03:53,070 --> 00:03:54,870
that was configured on-premises,

97
00:03:54,870 --> 00:03:56,700
and therefore the DNS resolver is going to say,

98
00:03:56,700 --> 00:03:58,860
hey, I know I should forward these queries

99
00:03:58,860 --> 00:04:02,130
to a DNS server that has this information.

100
00:04:02,130 --> 00:04:04,350
So it's going to forward them to these IPs.

101
00:04:04,350 --> 00:04:06,720
Now the resolver inbound endpoint is linked

102
00:04:06,720 --> 00:04:08,760
to the Route 53 resolver,

103
00:04:08,760 --> 00:04:11,160
and then from the private hosted zone,

104
00:04:11,160 --> 00:04:13,920
we're going to get our final lookup

105
00:04:13,920 --> 00:04:16,740
and give us the final information for this query.

106
00:04:16,740 --> 00:04:18,300
So this is what's called inbound endpoints

107
00:04:18,300 --> 00:04:20,850
because requests coming from the exterior

108
00:04:20,850 --> 00:04:25,320
and go inbound on AWS, so on-premises to AWS.

109
00:04:25,320 --> 00:04:28,170
As you may expect, the outbound endpoints are quite similar,

110
00:04:28,170 --> 00:04:29,430
but they go the other way.

111
00:04:29,430 --> 00:04:31,740
So we have again, the same setup, okay?

112
00:04:31,740 --> 00:04:36,180
But this time we want to be able to resolve the DNS names

113
00:04:36,180 --> 00:04:38,580
of the on-premises data center.

114
00:04:38,580 --> 00:04:42,330
So our EC2 instance is going to ask our Route 53 resolver,

115
00:04:42,330 --> 00:04:45,630
Do you know about web.onprem.private?

116
00:04:45,630 --> 00:04:46,463
And for this,

117
00:04:46,463 --> 00:04:48,660
we're going to create a resolver outbound endpoint,

118
00:04:48,660 --> 00:04:50,730
which has two different ENIs.

119
00:04:50,730 --> 00:04:52,590
And we're going to create a forwarding rule,

120
00:04:52,590 --> 00:04:55,200
which is saying, hey, for on-prem.private

121
00:04:55,200 --> 00:04:58,980
here is the target IP, and this target IP corresponds

122
00:04:58,980 --> 00:05:02,520
to the IP of my DNS resolver on-premises.

123
00:05:02,520 --> 00:05:04,800
So the Route 53 resolver is going to send this

124
00:05:04,800 --> 00:05:05,633
to this endpoint,

125
00:05:05,633 --> 00:05:07,414
and the endpoint is going to forward the DNS query

126
00:05:07,414 --> 00:05:10,470
into the on-premises DNS resolver.

127
00:05:10,470 --> 00:05:13,410
And then we will have automatically the response

128
00:05:13,410 --> 00:05:16,410
from the records stored in the DNS

129
00:05:16,410 --> 00:05:18,690
of our on-premises data center.

130
00:05:18,690 --> 00:05:20,610
Now to manage this outbound endpoint,

131
00:05:20,610 --> 00:05:21,810
we need resolver rules.

132
00:05:21,810 --> 00:05:23,657
So the outbound endpoint is going to set,

133
00:05:23,657 --> 00:05:25,808
to have a set of rules, okay?

134
00:05:25,808 --> 00:05:28,590
And it's going to explain how to forward DNS queries

135
00:05:28,590 --> 00:05:29,700
on your network.

136
00:05:29,700 --> 00:05:30,990
So there's conditional forwarding,

137
00:05:30,990 --> 00:05:32,340
which are the forwarding rules.

138
00:05:32,340 --> 00:05:34,200
So the idea is that we're going to say

139
00:05:34,200 --> 00:05:37,020
for specific DNS queries in this domain,

140
00:05:37,020 --> 00:05:40,050
please match all of it to a target IP address.

141
00:05:40,050 --> 00:05:43,440
So you can say, for example.com or acme.example.com,

142
00:05:43,440 --> 00:05:46,393
here is the target IP, or here are the target IPs

143
00:05:46,393 --> 00:05:48,900
for these domains.

144
00:05:48,900 --> 00:05:51,420
You can also override them with a system rule.

145
00:05:51,420 --> 00:05:53,880
And this is to define overriding behavior,

146
00:05:53,880 --> 00:05:55,650
which is saying, hey, for a whole subdomain,

147
00:05:55,650 --> 00:05:57,420
do not use these forwarding rules.

148
00:05:57,420 --> 00:05:58,830
This could be something you can create.

149
00:05:58,830 --> 00:06:01,050
And then finally we have auto-defined system rules,

150
00:06:01,050 --> 00:06:04,050
which is for domains that we know are resolved internally.

151
00:06:04,050 --> 00:06:06,120
For example, domain names that are internal

152
00:06:06,120 --> 00:06:09,180
to AWS or private hosted zones, for example

153
00:06:09,180 --> 00:06:12,990
compute.amazonaws.com or EC2.internal.

154
00:06:12,990 --> 00:06:15,240
Now in case of multiple rules matched,

155
00:06:15,240 --> 00:06:17,250
the Route 53 resolver is going to choose

156
00:06:17,250 --> 00:06:18,900
the most specific match,

157
00:06:18,900 --> 00:06:20,880
in terms of how to choose which rule to apply.

158
00:06:20,880 --> 00:06:22,440
Okay?

159
00:06:22,440 --> 00:06:26,160
Finally, these resolver rules can be shared across accounts.

160
00:06:26,160 --> 00:06:29,940
If you're using AWS resource access manager or RAM.

161
00:06:29,940 --> 00:06:32,070
That means that you can share them across multiple accounts.

162
00:06:32,070 --> 00:06:34,290
That means that you can manage them centrally

163
00:06:34,290 --> 00:06:38,100
in one dedicated account for these resolver rules.

164
00:06:38,100 --> 00:06:39,990
And then you can send DNS queries

165
00:06:39,990 --> 00:06:43,830
from multiple VPC to the target IP defined in the rules.

166
00:06:43,830 --> 00:06:47,190
So there are a way to have a central management

167
00:06:47,190 --> 00:06:50,160
of your resolver rules in the central accounts.

168
00:06:50,160 --> 00:06:51,600
Okay?

169
00:06:51,600 --> 00:06:52,433
So this is it.

170
00:06:52,433 --> 00:06:54,780
This is how you have a hybrid DNS on AWS.

171
00:06:54,780 --> 00:06:57,150
Remember inbound endpoints and outbound endpoints

172
00:06:57,150 --> 00:07:00,420
usually are used together to have in and out traffic

173
00:07:00,420 --> 00:07:03,870
from your both DNS systems from AWS and on-premises,

174
00:07:03,870 --> 00:07:06,450
and the exam will ask you about them for sure.

175
00:07:06,450 --> 00:07:07,560
So that's it for this lecture.

176
00:07:07,560 --> 00:07:08,393
I hope you liked it.

177
00:07:08,393 --> 00:07:10,140
And I will see you in the next lecture.

