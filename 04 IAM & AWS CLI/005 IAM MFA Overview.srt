1
00:00:00,000 --> 00:00:02,280
Now that we have created users in groups,

2
00:00:02,280 --> 00:00:04,320
it is time for us to protect these users

3
00:00:04,320 --> 00:00:06,450
in groups from being compromised.

4
00:00:06,450 --> 00:00:09,570
So for this, we have two defense mechanisms.

5
00:00:09,570 --> 00:00:10,860
The first one is to define

6
00:00:10,860 --> 00:00:12,810
what's called a password policy.

7
00:00:12,810 --> 00:00:13,643
Why?

8
00:00:13,643 --> 00:00:15,420
Well, because the stronger the password you use,

9
00:00:15,420 --> 00:00:17,580
the more security for your accounts.

10
00:00:17,580 --> 00:00:20,048
So in AWS you can set up a password policy

11
00:00:20,048 --> 00:00:22,200
with different options.

12
00:00:22,200 --> 00:00:24,300
The first one is you can set a minimum

13
00:00:24,300 --> 00:00:25,890
password length and you can

14
00:00:25,890 --> 00:00:28,200
require specific character types.

15
00:00:28,200 --> 00:00:29,190
For example, you may want

16
00:00:29,190 --> 00:00:32,100
to have an uppercase letter, lowercase letter,

17
00:00:32,100 --> 00:00:34,620
number, non alphanumeric characters,

18
00:00:34,620 --> 00:00:37,230
for example, a question mark and so on.

19
00:00:37,230 --> 00:00:39,300
Then you can allow or not IAM users

20
00:00:39,300 --> 00:00:41,340
to change their own passwords,

21
00:00:41,340 --> 00:00:43,320
or you can require users to change their password

22
00:00:43,320 --> 00:00:45,570
after some time to make your password expired,

23
00:00:45,570 --> 00:00:47,880
for example, to say every 90 days,

24
00:00:47,880 --> 00:00:50,010
users have to change their passwords.

25
00:00:50,010 --> 00:00:52,860
Finally, you can also prevent password reuse

26
00:00:52,860 --> 00:00:54,750
so that users, when they change their passwords,

27
00:00:54,750 --> 00:00:55,923
don't change it to the one

28
00:00:55,923 --> 00:00:57,600
that they already have or change it

29
00:00:57,600 --> 00:00:59,430
to the one they had before.

30
00:00:59,430 --> 00:01:00,263
So this is great.

31
00:01:00,263 --> 00:01:02,610
A password policy really is helpful

32
00:01:02,610 --> 00:01:05,250
against brute force attacks on your account.

33
00:01:05,250 --> 00:01:07,500
But there's a second defense mechanism

34
00:01:07,500 --> 00:01:09,900
that you need to know going into the exam.

35
00:01:09,900 --> 00:01:13,560
And this is the Multi-Factor Authentication or MFA.

36
00:01:13,560 --> 00:01:15,881
It is possible, you already used it

37
00:01:15,881 --> 00:01:18,300
on some websites, but on AWS it's a must

38
00:01:18,300 --> 00:01:20,460
and it's very recommended to use it.

39
00:01:20,460 --> 00:01:23,760
So users have access to your account

40
00:01:23,760 --> 00:01:25,770
and they can possibly do a lot of things,

41
00:01:25,770 --> 00:01:27,870
especially if they're administrators.

42
00:01:27,870 --> 00:01:29,670
They can change configuration,

43
00:01:29,670 --> 00:01:32,190
delete resources and other things.

44
00:01:32,190 --> 00:01:34,710
So you absolutely want to protect

45
00:01:34,710 --> 00:01:38,190
at least your root account and hopefully,

46
00:01:38,190 --> 00:01:39,870
all your IAM users.

47
00:01:39,870 --> 00:01:42,330
So how do we protect them on top of the password?

48
00:01:42,330 --> 00:01:44,520
Well, you use an MFA device.

49
00:01:44,520 --> 00:01:45,390
So what is MFA?

50
00:01:45,390 --> 00:01:49,410
MFA is using the combination of a password

51
00:01:49,410 --> 00:01:53,790
that you know and a security device that you own.

52
00:01:53,790 --> 00:01:55,620
And these two things together

53
00:01:55,620 --> 00:01:57,210
have a much greater security

54
00:01:57,210 --> 00:01:58,470
than just a password.

55
00:01:58,470 --> 00:02:00,390
So for example, let's take Alice.

56
00:02:00,390 --> 00:02:02,400
Alice knows her password,

57
00:02:02,400 --> 00:02:05,850
but she also has an MFA generating token.

58
00:02:05,850 --> 00:02:07,950
And by using these things together

59
00:02:07,950 --> 00:02:09,780
while logging in, she's going to be able

60
00:02:09,780 --> 00:02:12,600
to do a successful login on MFA.

61
00:02:12,600 --> 00:02:15,780
So the benefit of MFA is that even if Alice

62
00:02:15,780 --> 00:02:17,670
has lost her password

63
00:02:17,670 --> 00:02:19,350
because it's stolen or it's hacked,

64
00:02:19,350 --> 00:02:21,210
the account will not be compromised

65
00:02:21,210 --> 00:02:23,940
because the hacker will need to also get a hold

66
00:02:23,940 --> 00:02:25,890
of the physical device of Alice,

67
00:02:25,890 --> 00:02:27,600
that could be her phone, for example,

68
00:02:27,600 --> 00:02:28,980
to do a login.

69
00:02:28,980 --> 00:02:31,830
Obviously that is much less likely.

70
00:02:31,830 --> 00:02:35,370
So what are the MFA devices option in AWS?

71
00:02:35,370 --> 00:02:37,290
And you need to know them going into the exam,

72
00:02:37,290 --> 00:02:39,510
but don't worry, they're quite simple.

73
00:02:39,510 --> 00:02:41,730
The first one is a virtual MFA device.

74
00:02:41,730 --> 00:02:43,770
This is what we'll be using in the hands-on.

75
00:02:43,770 --> 00:02:45,990
And so you can use Google Authenticator,

76
00:02:45,990 --> 00:02:48,600
which is just working on one phone at a time,

77
00:02:48,600 --> 00:02:50,010
or using Authy.

78
00:02:50,010 --> 00:02:52,560
So for Authy, you have support

79
00:02:52,560 --> 00:02:55,500
for multiple tokens on a single device.

80
00:02:55,500 --> 00:02:58,080
So that means that with the virtual MFA device,

81
00:02:58,080 --> 00:02:59,700
you can have your root account,

82
00:02:59,700 --> 00:03:02,730
your IAM user, another account, another IAM user.

83
00:03:02,730 --> 00:03:04,133
It's up to you.

84
00:03:04,133 --> 00:03:04,966
You can have as many users and accounts

85
00:03:04,966 --> 00:03:07,050
as you want on your virtual MFA device,

86
00:03:07,050 --> 00:03:10,410
which make it a very easy solution to use.

87
00:03:10,410 --> 00:03:11,243
Now we have another thing

88
00:03:11,243 --> 00:03:13,410
called a Universal 2nd Factor

89
00:03:13,410 --> 00:03:15,600
or U2F Security Key,

90
00:03:15,600 --> 00:03:17,280
and that is a physical device.

91
00:03:17,280 --> 00:03:19,410
For example, a YubiKey by Yubico

92
00:03:19,410 --> 00:03:21,990
and Yubico is a third party to AWS.

93
00:03:21,990 --> 00:03:23,640
This is not AWS that provides it.

94
00:03:23,640 --> 00:03:25,260
This is a third party.

95
00:03:25,260 --> 00:03:27,090
And we use a physical device

96
00:03:27,090 --> 00:03:28,380
because maybe it's super easy,

97
00:03:28,380 --> 00:03:30,030
you put it on your key fobs

98
00:03:30,030 --> 00:03:31,290
and you're good to go.

99
00:03:31,290 --> 00:03:34,200
So this YubiKey supports multiple root

100
00:03:34,200 --> 00:03:36,540
and IAM users using a single security key.

101
00:03:36,540 --> 00:03:38,250
So you don't need as many keys as users,

102
00:03:38,250 --> 00:03:40,350
otherwise there will be a nightmare.

103
00:03:40,350 --> 00:03:41,820
Then you have other options.

104
00:03:41,820 --> 00:03:44,130
You have a hardware key fob MFA device,

105
00:03:44,130 --> 00:03:45,960
for example, this one provided by Gemalto,

106
00:03:45,960 --> 00:03:49,170
which is also a third party to AWS.

107
00:03:49,170 --> 00:03:52,260
And finally, if you are using the cloud

108
00:03:52,260 --> 00:03:56,280
of the government in the US, the AWS GovCloud,

109
00:03:56,280 --> 00:03:58,080
then you have a special key fob

110
00:03:58,080 --> 00:03:58,913
that looks like this

111
00:03:58,913 --> 00:04:01,263
that is provided by SurePassID,

112
00:04:01,263 --> 00:04:02,580
which is also a third party.

113
00:04:02,580 --> 00:04:03,413
So that's it.

114
00:04:03,413 --> 00:04:04,246
We've seen the theory

115
00:04:04,246 --> 00:04:05,670
on how to protect your account,

116
00:04:05,670 --> 00:04:06,840
but let's go in the next lecture

117
00:04:06,840 --> 00:04:07,740
to implement that.

118
00:04:07,740 --> 00:04:09,640
So I will see you in the next lecture.

