1
00:00:00,500 --> 00:00:03,680
Now let's talk about the AWS transfer family.

2
00:00:03,680 --> 00:00:06,210
So the idea is that you want to send data in and out

3
00:00:06,210 --> 00:00:08,740
of Amazon S3 or EFS

4
00:00:08,740 --> 00:00:10,730
but you don't want to use the S3 APIs.

5
00:00:10,730 --> 00:00:13,760
You don't want to use the EFS network file system.

6
00:00:13,760 --> 00:00:15,730
You just want to use the FTP protocol.

7
00:00:15,730 --> 00:00:16,563
In this case,

8
00:00:16,563 --> 00:00:19,083
you need to use the transfer family service from AWS.

9
00:00:19,940 --> 00:00:22,050
So it supports three kinds of protocols.

10
00:00:22,050 --> 00:00:24,380
It supports AWS transfer for FTP.

11
00:00:24,380 --> 00:00:27,410
So the file transfer protocol, FTP.

12
00:00:27,410 --> 00:00:31,370
FTPS, which is the file transfer protocol over SSL,

13
00:00:31,370 --> 00:00:32,750
so encrypted form.

14
00:00:32,750 --> 00:00:35,950
Or SFTP, which is a secure file transfer protocol.

15
00:00:35,950 --> 00:00:37,970
Now you don't want you to be an expert on those.

16
00:00:37,970 --> 00:00:40,120
Just know that FTP is unencrypted

17
00:00:40,120 --> 00:00:44,200
whereas FTPS and SFTP are encrypted in flight.

18
00:00:44,200 --> 00:00:46,040
Now, the idea is that using the FTP protocol,

19
00:00:46,040 --> 00:00:48,460
you can upload to S3 or EFS.

20
00:00:48,460 --> 00:00:51,730
The transfer family is fully managed infrastructure.

21
00:00:51,730 --> 00:00:53,650
It's scalable, reliable, and highly available.

22
00:00:53,650 --> 00:00:56,350
So you manage at all that capability.

23
00:00:56,350 --> 00:00:58,340
And in terms of pricing, you're going to pay

24
00:00:58,340 --> 00:01:02,570
per provision end points per hour, plus a fee per gigabytes

25
00:01:02,570 --> 00:01:06,160
of data transferred in and out of the transfer family.

26
00:01:06,160 --> 00:01:08,080
You can store and manage a user's credentials

27
00:01:08,080 --> 00:01:09,690
for that service within the service.

28
00:01:09,690 --> 00:01:11,280
Or you can also integrate

29
00:01:11,280 --> 00:01:13,280
with existing authentication system,

30
00:01:13,280 --> 00:01:15,120
such as Microsoft Active Directory, LDAP,

31
00:01:15,120 --> 00:01:18,670
Okta, Amazon Cognito or any custom source.

32
00:01:18,670 --> 00:01:21,830
The usage of this is obviously to have an FTP interface

33
00:01:21,830 --> 00:01:23,830
into Amazon S3 or EFS.

34
00:01:23,830 --> 00:01:26,170
So as to share files, to share public datasets,

35
00:01:26,170 --> 00:01:28,910
to do CRM, ERP, et cetera, et cetera.

36
00:01:28,910 --> 00:01:30,700
So just the diagram for you to understand.

37
00:01:30,700 --> 00:01:33,100
The transfer family has three flavors

38
00:01:33,100 --> 00:01:36,180
and the users can access directly using the end points

39
00:01:36,180 --> 00:01:41,120
of the FTP or optional, you can use a GNS called route 53

40
00:01:41,120 --> 00:01:44,470
to provide your own the host name into the FTP service.

41
00:01:44,470 --> 00:01:47,470
And then the FTP service thus so the transfer

42
00:01:47,470 --> 00:01:51,170
for FTP service will have an IAM role

43
00:01:51,170 --> 00:01:53,720
that will be assumed to send or read through the files from

44
00:01:53,720 --> 00:01:55,950
Amazon S3 or Amazon EFS.

45
00:01:55,950 --> 00:01:57,080
And this is done transparently.

46
00:01:57,080 --> 00:01:59,210
You don't have to set any many things up.

47
00:01:59,210 --> 00:02:00,043
And finally,

48
00:02:00,043 --> 00:02:03,050
if you wanted to secure the transfer family services

49
00:02:03,050 --> 00:02:05,150
then you could authenticate your users

50
00:02:05,150 --> 00:02:07,530
using an external authentication system

51
00:02:07,530 --> 00:02:09,750
such as Active Directory, LDAP

52
00:02:09,750 --> 00:02:12,110
or all the things I've just said in the previous slide.

53
00:02:12,110 --> 00:02:12,943
Okay.

54
00:02:12,943 --> 00:02:14,070
So let's say, just that you know,

55
00:02:14,070 --> 00:02:16,850
this feature as a high level, I hope you liked it.

56
00:02:16,850 --> 00:02:18,800
and I will see you in the next lecture.

